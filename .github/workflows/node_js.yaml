name: Node.js CI

on: [push, pull_request]

jobs:
  compile:
    name: Test Webpack Production Compile
    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install locked dependencies
        run: npm ci

      - run: npm run compile
      
  make-macos:
    needs: [compile]

    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - name: Install locked dependencies
        run: npm ci

      - name: Compile Typescript
        run: npm run compile

      - name: Make application
        run: npm run make # ./out/beryl-darwin-x64/ or ./out/make/zip/darwin/x64/<zip file>

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: beryl-macos-standalone-archive
          path: ${{ github.workspace }}/out/make/zip/darwin/x64

  package-linux:
    needs: [compile]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - name: Install locked dependencies
        run: npm ci

      - name: Package application
        run: npm run package # ./out/beryl-linux-x64/

      - name: Set VERSION_USED env var to tag
        if: startsWith(github.ref, 'refs/tags/')
        run: echo "VERSION_USED=$(echo ${GITHUB_REF:10})" >> $GITHUB_ENV

      - name: Set VERSION_USED env var to sha
        if: "!startsWith(github.ref, 'refs/tags/')"
        run: echo "VERSION_USED=${{ github.sha }}" >> $GITHUB_ENV

      - name: Create standalone binary archive
        uses: ihiroky/archive-action@v1
        with:
          root_dir: out/
          file_path: beryl-${{ env.VERSION_USED }}-linux-amd64-standalone.tar.gz

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: beryl-linux-standalone-archive
          path: ${{ github.workspace }}/beryl-${{ env.VERSION_USED }}-linux-amd64-standalone.tar.gz

  package-windows:
    needs: [compile]

    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - name: Install locked dependencies
        run: npm ci

      - name: Package application
        run: npm run package

      - name: Set VERSION_USED env var to tag
        if: startsWith(github.ref, 'refs/tags/')
        run: echo "VERSION_USED=$(echo ${GITHUB_REF:10})" >> $GITHUB_ENV
        shell: bash

      - name: Set VERSION_USED env var to sha
        if: "!startsWith(github.ref, 'refs/tags/')"
        run: echo "VERSION_USED=${{ github.sha }}" >> $GITHUB_ENV
        shell: bash

      - name: Zip standalone binary archive
        uses: ihiroky/archive-action@v1
        with:
          root_dir: out/beryl-win32-x64/
          file_path: beryl-${{ env.VERSION_USED }}-windows-amd64-standalone.zip

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: beryl-windows-standalone-archive
          path: ${{ github.workspace }}/beryl-${{ env.VERSION_USED }}-windows-amd64-standalone.zip

  create-windows-installer:
    needs: [compile]
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      # TODO: Replace compiling with downloading result artifact from package-windows
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - name: Install locked dependencies
        run: npm ci

      - name: Package application
        run: npm run package

      - name: Set VERSION_USED env var to tag
        if: startsWith(github.ref, 'refs/tags/')
        run: echo "VERSION_USED=$(echo ${GITHUB_REF:10})" >> $GITHUB_ENV
        shell: bash

      - name: Set VERSION_USED env var to sha
        if: "!startsWith(github.ref, 'refs/tags/')"
        run: echo "VERSION_USED=${{ github.sha }}" >> $GITHUB_ENV
        shell: bash

      - name: Compile installer
        run: ISCC /DMyAppVersion=${env:VERSION_USED} installer.iss

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: beryl-windows-installer
          path: ${{ github.workspace }}/innoOut

  deploy-to-gh-releases:
    name: Deploy to GitHub Releases
    runs-on: ubuntu-latest
    needs: [create-windows-installer, make-macos, package-linux, package-windows]
    if: startsWith(github.ref, 'refs/tags/t')

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          path: ${{ github.workspace }}/build-artifacts

      - name: Upload to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ github.workspace }}/build-artifacts/*/*
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
